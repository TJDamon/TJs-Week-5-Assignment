class Player {
    constructor(name, position) {
        this.name = name;
        this.position = position;
    }

    describe() {
        return '$(this.name) plays $(this.position).'
    }
}

class Team {
     constructor(team) {
         this.name = name;
         this.players = [];
     }

     addPlayer(player) {
         if (player instanceof Player) {
             this.players.push(player)
             } else { 
                 throw new Error('You cna only add an instance of player. Argument is not a player: $(playerO)');
             }
     }

     describe() {
         return '$(name) has $(this.players.length) players.'
     }
}

class Menu {
    constructor() {
        this.teams = [];
        this.selectedTeam = null;
    }

    start() {
        let selection = this.showMainMenuOptions() ;
            while (selection != 0) {
            switch (selection) {
                case '1':
                    this.createTeam();
                break;
                case '2':
                    this.viewTeam();
                break;
                case '3':
                    this.deleteTeam();
                break;
                case '4':
                    this.displayTeams();
                break;
                default:
                    selection = 0;
            }
            selection = this.showMainMenuOptions();
        }
        alert('Goodbye!');
    }

    showMainMenuOptions() {
        return prompt(`
        0) Exit
        1) Create New Team
        2) View Team
        3) Delete Team
        4) Display All teams
        `);
    }

    showTeamMenuOption(teamInfo) {
        return prompt(`
        0) Back
        1) Create Player
        2) Delete Player
        *****************************
        *{***************************
        $(teamInfo}
        `)
    }

    displayTeams() {
        let teamString = '';
        for (let i = 0; i < this.teams.length; i++) {
            teamString += 1 + ') ' + this.team[i].name + '\n';
        }
        alert(teamString); 
    }

    createTeam() {
        let name = prompt('Enter name for new team:');
        this.teams.push(new Team(name));
    }

    viewTeam() {
        if (index > -1 && index < this.teams.length) {
            this.selectedTeam = this.teams[index];
            let description = 'Team Name: ' + this.selectedTeam.name  + '\n';

            for (let i = 0; i < this.selectedTeam.players.length; i++)
                description += i + ') ' + this.selectedTeam.players[i].name + ' - ' + this.selectedTeam.players[i].position + '\n';
        }
        let selection = this.showTeamMenuOption(description);
        switch (selection) {
            case '1' :
                this.createPlayer();
                break;
            case '2':
                this.deletePlater();
        }
    }
}

let Menu = new Menu();
menu.start();